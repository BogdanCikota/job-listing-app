{"version":3,"sources":["components/jobList_components/Job.js","components/jobList_components/pagination_components/Pages.js","components/jobList_components/pagination_components/PrevButton.js","components/jobList_components/pagination_components/NextButton.js","components/jobList_components/Pagination.js","components/JobList.js","components/Filters.js","components/Header.js","components/Footer.js","components/JobDescription.js","components/Loading.js","App.js","index.js"],"names":["Job","job","index","className","company_name","category","candidate_required_location","job_type","publication_date","onClick","window","scroll","to","pathname","state","description","Pages","goToTop","numOfResults","chunk","setPageNum","setfromIndex","settoIndex","onChange","e","num","target","value","selectedIndex","map","page","PrevButton","pageNumElement","fromIndex","toIndex","disabled","innerHTML","NextButton","jobs","length","Pagination","goToPage","setgoToPage","pagesCounter","chunkedPages","useState","fromOne","setfromOne","fromHundred","setfromHundred","fromTwoHundred","setfromTwoHundred","document","querySelector","prev","JobList","pages","setChunkedPages","pageNum","useEffect","Filters","categories","setLimit","setCategory","setSearch","inputSearch","setInputSearch","setIsLoading","selectedCategory","setselectedCategory","inputLimit","setInputLimit","onSubmit","preventDefault","slug","name","htmlFor","type","id","min","Header","openFilters","setOpenFilters","filters","style","Footer","href","rel","JobDescription","useLocation","dangerouslySetInnerHTML","__html","Loading","hasData","App","setJobs","isLoading","setpagesCounter","setPages","limit","setCategories","search","setHasData","getCategories","a","axios","get","response","console","log","data","error","pagesArr","i","push","getJobs","basemname","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c31c8365.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Job({job, index}) {\r\n\r\n    const goToTop = () => {\r\n        window.scroll(0,0);\r\n    }\r\n\r\n    return (\r\n        <div className={index%2 !== 0 ? 'bg-gray-100 p-3': 'bg-gray-50 p-3'}>\r\n            <h3 className='text-blue-900 font-semibold'>Company: <span className='font-bold' >{job.company_name}</span> </h3>\r\n            <p className='text-blue-900 font-semibold'>Category: <span className='font-normal'>{job.category}</span> </p>\r\n            <div className='text-blue-900 font-semibold'>Required location: {job.candidate_required_location === '' ? <span>/</span> : <span className='font-normal'>{job.candidate_required_location}</span> } </div>\r\n            <div className='text-blue-900 font-semibold'>Job Type: {job.job_type ? <span className='font-normal'>{job.job_type}</span> : <span>/</span> } </div>\r\n            <div className='text-blue-900 font-semibold'>Published: <span className='font-normal'>{job.publication_date}</span> </div>\r\n            <Link onClick={goToTop} className='text-blue-900 font-semibold' to={{pathname:\"/JobDescription\", state: {description: job.description}}}>Read more...</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","\r\nfunction Pages({goToTop, numOfResults, chunk, setPageNum, setfromIndex, settoIndex}) {\r\n    return (\r\n        <select className='block m-auto border rounded-md' onChange={(e)=>{\r\n            let num = e.target.value;\r\n            setPageNum(+num + +1);\r\n            setfromIndex(num * numOfResults);\r\n            settoIndex(num * numOfResults+numOfResults);\r\n            e.target.selectedIndex = 0;\r\n            goToTop();\r\n        }}>\r\n            <option>Go to page...</option>\r\n            {\r\n                chunk.map((page, index) => <option key={index} value={page}>{page+1}</option> )\r\n            }\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react'\r\n\r\nfunction PrevButton({ goToTop, numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button disabled={fromIndex === 0 ? true : false} className='font-bold bg-blue-500 px-2 pb-0.5 rounded-full text-xl text-white' onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return pageNumCurrent-1\r\n            });\r\n            setfromIndex(fromIndex-numOfResults);\r\n            settoIndex(toIndex-numOfResults);\r\n            goToTop();\r\n        }}>&#60;</button>\r\n    )\r\n}\r\n\r\nexport default PrevButton\r\n","\r\nfunction NextButton({jobs, goToTop, numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button disabled={toIndex > jobs.length-1 ? true : false} className='font-bold bg-blue-500 px-2 pb-0.5 rounded-full text-xl text-white' onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return +pageNumCurrent + +1\r\n                });\r\n            setfromIndex(fromIndex+numOfResults);\r\n            settoIndex(toIndex+numOfResults);\r\n            goToTop();\r\n        }}>&#62;</button>\r\n    )\r\n}\r\n\r\nexport default NextButton\r\n","import { useState } from \"react\";\r\nimport Pages from \"./pagination_components/Pages\";\r\nimport PrevButton from \"./pagination_components/PrevButton\";\r\nimport NextButton from \"./pagination_components/NextButton\";\r\n\r\nfunction Pagination({goToPage, setgoToPage, numOfResults, jobs, fromIndex, setPageNum, setfromIndex, settoIndex, toIndex, pagesCounter, chunkedPages }) {\r\n    const [fromOne, setfromOne] = useState(false);\r\n    const [fromHundred, setfromHundred] = useState(false);\r\n    const [fromTwoHundred, setfromTwoHundred] = useState(false);\r\n\r\n    const pageNumElement = document.querySelector('.pageNum');\r\n\r\n    const goToTop = () => {\r\n        window.scroll(0,0);\r\n    }\r\n\r\n    return (\r\n        <div className='grid gap-2 m-auto my-4'>\r\n\r\n            <div className='flex gap-3 justify-center mb-1.5'>\r\n                <PrevButton \r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                goToTop={goToTop}\r\n                />\r\n                {pagesCounter > 100 && !goToPage && <button onClick={()=> setgoToPage(!goToPage)} className='rounded-lg px-1  bg-blue-500 text-white'>Go to page...</button>}\r\n            { \r\n                \r\n                goToPage && pagesCounter > 100 && \r\n                <div className='flex gap-3'>\r\n                    {/* from-to buttons */}\r\n                    <button className={`${fromOne && 'bg-blue-600'}  rounded-lg px-1  bg-blue-500 text-white`} onClick={()=>{\r\n                        setfromOne(prev=>!prev);\r\n                        setfromHundred(false);\r\n                        setfromTwoHundred(false)\r\n                    }}>1...100</button>\r\n                    {pagesCounter > 100 &&\r\n                     <button className={`${fromHundred && 'bg-blue-600'}  rounded-lg px-1  bg-blue-500 text-white`} onClick={()=>{\r\n                        setfromHundred(prev=>!prev);\r\n                        setfromOne(false);\r\n                        setfromTwoHundred(false)\r\n                    }}>100...200</button>}\r\n                    {pagesCounter > 200\r\n                     &&<button className={`${fromTwoHundred && 'bg-blue-600'}  rounded-lg px-1  bg-blue-500 text-white`} onClick={()=>{\r\n                        setfromTwoHundred(prev=>!prev)\r\n                        setfromOne(false);\r\n                        setfromHundred(false)\r\n                    }}>200...</button>}\r\n\r\n                </div>\r\n                \r\n            }\r\n\r\n            {\r\n               chunkedPages.length > 0 &&  pagesCounter < 100 && \r\n                <Pages\r\n                chunk={chunkedPages[0]}\r\n                setPageNum={setPageNum} \r\n                setfromIndex={setfromIndex} \r\n                settoIndex={settoIndex}\r\n                numOfResults={numOfResults}\r\n                goToTop={goToTop}\r\n                /> \r\n            }\r\n\r\n                <NextButton\r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                goToTop={goToTop}\r\n                jobs={jobs}\r\n                />\r\n            </div>\r\n\r\n\r\n            {\r\n                // render pages buttons when clicked from-to button\r\n                fromOne ? chunkedPages.map((chunk, index)=> index === 0 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} goToTop={goToTop}/> ) :\r\n                fromHundred ? chunkedPages.map((chunk, index)=> index === 1 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} goToTop={goToTop}/> ) :\r\n                fromTwoHundred && chunkedPages.map((chunk, index)=> index === 2 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} goToTop={goToTop}/>)\r\n            }\r\n\r\n            \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import {useEffect} from \"react\";\r\nimport Job from \"./jobList_components/Job\";\r\nimport chunk from 'lodash.chunk';\r\nimport Pagination from \"./jobList_components/Pagination\";\r\n\r\nfunction JobList({goToPage, setgoToPage, pages, jobs, pagesCounter, fromIndex, setfromIndex, toIndex, settoIndex,\r\n    chunkedPages, setChunkedPages, pageNum, setPageNum, numOfResults} ) {\r\n    \r\n\r\n    useEffect(() => {\r\n        //divide pages array into 100 chunks\r\n        setChunkedPages(chunk(pages, 100));\r\n    }, [pages, setChunkedPages]);\r\n\r\n    return (\r\n        <div className='grid gap-2'>\r\n            <div className='text-center bg-blue-500 p-1 text-white'>Found <span>{jobs.length} results</span></div>\r\n            <h2 className='font-bold text-center p-1 pl-3 rounded-full  px-3 bg-gray-100 inline-block text-blue-900' >Page <span className='pageNum'>{pageNum}</span> </h2>                    \r\n            <div>\r\n                {jobs.map((job, index) => {\r\n                    return index >= fromIndex && index < toIndex && <Job key={index} index={index} job={job}/>\r\n                })}\r\n            </div>\r\n            <hr/>\r\n            \r\n            {\r\n                jobs.length > numOfResults  && \r\n                \r\n                <Pagination \r\n                fromIndex={fromIndex}\r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                chunkedPages={chunkedPages}\r\n                setChunkedPages={setChunkedPages}\r\n                pageNum={pageNum}\r\n                setPageNum={setPageNum}\r\n                jobs={jobs}\r\n                pagesCounter={pagesCounter}\r\n                numOfResults={numOfResults}\r\n                goToPage={goToPage}\r\n                setgoToPage={setgoToPage}\r\n                />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobList\r\n","import React, { useState } from 'react'\r\n\r\nfunction Filters({setgoToPage, numOfResults, setfromIndex, settoIndex, setPageNum, categories, setLimit, setCategory, setSearch, inputSearch, setInputSearch, setIsLoading}) {\r\n\r\n    const [selectedCategory, setselectedCategory] = useState('');\r\n    const [inputLimit, setInputLimit] = useState(0);\r\n    \r\n    const resetPage = () => {\r\n        setfromIndex(0); settoIndex(numOfResults); setPageNum(1); setgoToPage(false);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        //api state\r\n        setLimit('all');\r\n        setCategory(''); \r\n        setSearch('');\r\n        //local state\r\n        setselectedCategory('Choose a job category');\r\n        setInputSearch('');\r\n        setInputLimit('');\r\n        //dom\r\n        document.querySelector('select').selectedIndex = 0;\r\n        document.querySelector('#search').value = '';\r\n        document.querySelector('#limit').value = '';\r\n    };\r\n\r\n    \r\n    return (\r\n        <form className='filters grid gap-3 mb-3' onSubmit={e => {\r\n                    e.preventDefault();\r\n                    setCategory(selectedCategory);\r\n                    setSearch(inputSearch);\r\n                    setLimit(inputLimit);\r\n                    setIsLoading(true);\r\n                    resetPage();\r\n                    }}>\r\n            <select className='border p-1.5' onChange={(e)=>{\r\n                setselectedCategory(e.target.value);\r\n            }}>\r\n                <option>Choose a job category</option>\r\n                <option>All jobs</option>\r\n                {categories.map( (category, index) => <option key={index} value={category.slug} >{category.name}</option>\r\n                 )}\r\n            </select>\r\n\r\n            <div className='border p-2'>\r\n                <label className='mb-2 block'  htmlFor=\"search\">Search job listing title and description</label>\r\n                 <input className='pl-2 border' type=\"search\" id=\"search\"  onChange={ e => {\r\n                    setInputSearch((e.target.value));\r\n                }} />\r\n            </div>\r\n\r\n            <div className='border p-2'>\r\n                <label className='block'  htmlFor=\"limit\">Limit the number of job listing result <span className='text-sm italic'>(will not work with search input, API problem)</span></label>\r\n                <input className='border w-20 my-1.5' type=\"number\" id=\"limit\" min=\"1\" onChange={ e => {\r\n                    setInputLimit(e.target.value);\r\n                }} />\r\n            </div>\r\n\r\n            <div className='flex justify-evenly'>\r\n                <button className=' rounded-lg px-5  bg-blue-600 text-white' type=\"submit\">Go!</button>\r\n                <button className=' rounded-lg px-5  bg-blue-600 text-white' onClick={resetFilters}>Reset</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","\r\nfunction Header({ openFilters, setOpenFilters }) {\r\n    const filters = document.querySelector('.filters');\r\n    return (\r\n        <header className=\"flex bg-blue-400 p-3 pb-5\">\r\n            <h1 className=' text-white text-2xl text-center'>Remote Jobs</h1>\r\n            <button className='block  mt-2 bg-blue-500 text-white rounded-full  px-3 ml-auto' onClick={()=> {\r\n                setOpenFilters(openFilters => !openFilters);\r\n                !openFilters? filters.style = `display: grid`:filters.style = `display: none`\r\n                }}> {openFilters ? <span>Hide</span>: <span>Show</span> } filters</button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","function Footer() {\r\n    \r\n    return (\r\n        <footer className='bg-blue-400 grid gap-2 text-white mt-2 text-center'>\r\n            <p className='py-2'>API Source: <a href=\"https://remotive.io/\" rel=\"noreferrer\" target=\"_blank\">https://remotive.io/api-documentation</a></p>\r\n            <p className='bg-blue-500 py-2'>Made by <a className='underline' href=\"https://github.com/BogdanCikota\" rel=\"noreferrer\" target=\"_blank\">Bogdan</a> </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction JobDescription() {\r\n    const location = useLocation();\r\n    const {description} = location.state;\r\n    \r\n    return (\r\n       <div className='bg-gray-50'>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold\"> &#8592; back</Link>\r\n        <div className='job-description p-2 text-blue-900 grid gap-2' dangerouslySetInnerHTML={{ __html: description }}></div>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold\"> &#8592; back</Link>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default JobDescription","\r\nfunction Loading({hasData}) {\r\n    return (\r\n        <div className='grid gap-2'>\r\n            <h2 className='text-center bg-blue-500 p-1 text-white'>\r\n                {hasData ? <span>Loading...</span> : <span>No data! Try again later!</span>}\r\n            </h2>\r\n            <div className='rounded-full bg-gray-100 h-8' > </div>\r\n            <div>\r\n                <div className='bg-gray-50 p-3 h-32'></div>\r\n                <div className='bg-gray-100 p-3 h-32'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport JobList from \"./components/JobList\";\r\nimport Filters from \"./components/Filters\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport JobDescription from \"./components/JobDescription\";\r\nimport Loading from \"./components/Loading\";\r\n\r\n\r\nfunction App() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pagesCounter, setpagesCounter] = useState(0);\r\n    const [pages, setPages] = useState([]);\r\n    const [limit, setLimit] = useState('all');\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [inputSearch, setInputSearch] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [openFilters, setOpenFilters] = useState(false);\r\n    const [fromIndex, setfromIndex] =useState(0);\r\n    const numOfResults = 7;\r\n    const [toIndex, settoIndex]  = useState(numOfResults);\r\n    const [chunkedPages, setChunkedPages] = useState([]);\r\n    const [pageNum, setPageNum] = useState(1);\r\n    const [goToPage, setgoToPage] = useState(false);\r\n    const [hasData, setHasData] = useState(true);\r\n    \r\n\r\n    const getCategories = async() => {\r\n        try {\r\n            const response = await axios.get('https://remotive.io/api/remote-jobs/categories');\r\n            console.log(response.data.jobs);\r\n            setCategories(response.data.jobs);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            setHasData(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n         const getJobs = async() => {\r\n            try {\r\n                const response = await axios.get(`https://remotive.io/api/remote-jobs?limit=${limit}&category=${category}&search=${search}`);\r\n                console.log(response.data.jobs);\r\n                setJobs(response.data.jobs);\r\n                setIsLoading(false);\r\n\r\n                let pagesArr = []\r\n\r\n                for (let i = 0; i < response.data.jobs.length / numOfResults; i++) {\r\n                    pagesArr.push(i);\r\n                }\r\n\r\n                setpagesCounter(pagesArr.length);\r\n\r\n                setPages(pagesArr);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getJobs();\r\n        getCategories();\r\n    }, [limit, category, search]);\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <HashRouter basemname='/'>\r\n            <div className=\"max-w-sm m-auto\">\r\n                <Header openFilters={openFilters} setOpenFilters={setOpenFilters} />\r\n                \r\n                <Filters \r\n                setLimit={setLimit} \r\n                setCategory={setCategory} \r\n                setSearch={setSearch}\r\n                inputSearch={inputSearch}\r\n                setIsLoading={setIsLoading}\r\n                setInputSearch={setInputSearch}\r\n                categories={categories}\r\n                setfromIndex={setfromIndex}\r\n                settoIndex={settoIndex}\r\n                setPageNum={setPageNum}\r\n                numOfResults={numOfResults}\r\n                setgoToPage={setgoToPage}\r\n                />\r\n                \r\n                {isLoading\r\n                    ? <Loading hasData={hasData} />:\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <JobList \r\n                                jobs={jobs} \r\n                                pages={pages} \r\n                                pagesCounter={pagesCounter} \r\n                                fromIndex={fromIndex} \r\n                                setfromIndex={setfromIndex}\r\n                                toIndex={toIndex} \r\n                                settoIndex={settoIndex}\r\n                                chunkedPages={chunkedPages} \r\n                                setChunkedPages={setChunkedPages}\r\n                                pageNum={pageNum} \r\n                                setPageNum={setPageNum}\r\n                                numOfResults={numOfResults}\r\n                                goToPage={goToPage}\r\n                                setgoToPage={setgoToPage}\r\n                                /> \r\n                            </Route>\r\n\r\n                            <Route exact path=\"/JobDescription\" component={JobDescription} />\r\n                        </Switch>\r\n                    \r\n                    }\r\n\r\n                    <hr />\r\n                    <Footer />\r\n            </div>\r\n        </HashRouter>\r\n   \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}