{"version":3,"sources":["components/Job.js","components/Page.js","components/Pagination.js","components/JobList.js","components/Filters.js","components/Header.js","components/Footer.js","components/JobDescription.js","components/Loading.js","App.js","index.js"],"names":["Job","job","index","className","company_name","category","candidate_required_location","job_type","publication_date","onClick","window","scroll","to","pathname","state","description","Page","chunk","setPageNum","setfromIndex","settoIndex","map","page","Pagination","jobs","fromIndex","toIndex","pagesCounter","chunkedPages","useState","fromOne","setfromOne","fromHundred","setfromHundred","fromTwoHundred","setfromTwoHundred","disabled","document","querySelector","innerHTML","length","prev","JobList","pages","setChunkedPages","pageNum","useEffect","Filters","categories","setLimit","setCategory","setSearch","inputSearch","setInputSearch","setIsLoading","resetPage","onChange","e","target","value","slug","name","onSubmit","preventDefault","htmlFor","type","id","min","Header","openFilters","setOpenFilters","filters","style","Footer","isLoading","position","bottom","href","rel","JobDescription","useLocation","dangerouslySetInnerHTML","__html","Loading","App","setJobs","setpagesCounter","setPages","limit","setCategories","search","getCategories","a","axios","get","response","console","log","data","error","pagesArr","i","push","getJobs","basemname","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fde222b9.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Job({job, index}) {\r\n\r\n    const goToTop = () => {\r\n        window.scroll(0,0);\r\n    }\r\n\r\n    return (\r\n        <div className={index%2 !== 0 ? 'bg-gray-100 p-3': 'bg-gray-50 p-3'}>\r\n            <h3 className='text-blue-900 font-semibold'>Company: <span className='font-bold' >{job.company_name}</span> </h3>\r\n            <p className='text-blue-900 font-semibold'>Category: <span className='font-normal'>{job.category}</span> </p>\r\n            <div className='text-blue-900 font-semibold'>Required location: {job.candidate_required_location === '' ? <span>/</span> : <span className='font-normal'>{job.candidate_required_location}</span> } </div>\r\n            <div className='text-blue-900 font-semibold'>Job Type: {job.job_type ? <span className='font-normal'>{job.job_type}</span> : <span>/</span> } </div>\r\n            <div className='text-blue-900 font-semibold'>Published: <span className='font-normal'>{job.publication_date}</span> </div>\r\n            <Link onClick={goToTop} className='text-blue-900 font-semibold' to={{pathname:\"/JobDescription\", state: {description: job.description}}}>Read more...</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","import React from 'react'\r\n\r\nfunction Page({chunk, setPageNum, setfromIndex, settoIndex}) {\r\n    return (\r\n        <div className='p-2 grid grid-cols-8 gap-2 col-span-full' >{chunk.map((page, index) => {\r\n            return <button className='rounded-lg px-1  bg-blue-400 text-white' key={index} onClick={()=>{\r\n                    setPageNum(page+1);\r\n                    setfromIndex(page*10-1);\r\n                    settoIndex(page*10+10);\r\n                }}>{page+1}</button>\r\n            } )}</div>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","import { useState } from \"react\";\r\nimport Page from \"./Page\";\r\n\r\nfunction Pagination({jobs, fromIndex, setPageNum, setfromIndex, settoIndex, toIndex, pagesCounter, chunkedPages }) {\r\n    const [fromOne, setfromOne] = useState(false);\r\n    const [fromHundred, setfromHundred] = useState(false);\r\n    const [fromTwoHundred, setfromTwoHundred] = useState(false);\r\n\r\n    return (\r\n        <div className='grid gap-2'>\r\n            <div className='grid grid-cols-2'>\r\n            {fromIndex === -1 ? <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' disabled>prev 10</button> : \r\n            <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                setPageNum(()=>{\r\n                    return document.querySelector('.pageNum').innerHTML-1\r\n                });\r\n                setfromIndex(fromIndex-10);\r\n                settoIndex(toIndex-10);\r\n            }}>prev 10</button>}\r\n\r\n            {toIndex > jobs.length-1 ? <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' disabled>next 10</button> :\r\n                <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                setPageNum(()=>{\r\n                    return +document.querySelector('.pageNum').innerHTML + +1\r\n                    });\r\n                setfromIndex(fromIndex+10);\r\n                settoIndex(toIndex+10);\r\n            }}>next 10</button>}\r\n\r\n            {\r\n                pagesCounter < 100 && chunkedPages.map((chunk, index)=> index === 0 && <Page  key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} /> )\r\n            }\r\n\r\n            </div>\r\n            \r\n            {pagesCounter > 100 && <div className='grid grid-cols-3'>\r\n                <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                    setfromOne(prev=>!prev);\r\n                    setfromHundred(false);\r\n                    setfromTwoHundred(false)\r\n                }}>1...100</button>\r\n                {pagesCounter > 100 && <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                    setfromHundred(prev=>!prev);\r\n                    setfromOne(false);\r\n                }}>100...200</button>}\r\n                {pagesCounter > 200 &&<button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                    setfromTwoHundred(prev=>!prev)\r\n                    setfromOne(false);\r\n                    setfromHundred(false)\r\n                }}>200...</button>}\r\n            </div>}\r\n\r\n            <hr />\r\n\r\n            {\r\n                fromOne ? chunkedPages.map((chunk, index)=> index === 0 && <Page key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} /> ) :\r\n                fromHundred ? chunkedPages.map((chunk, index)=> index === 1 && <Page key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} /> ) :\r\n                fromTwoHundred && chunkedPages.map((chunk, index)=> index === 2 && <Page key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} />)\r\n            }\r\n\r\n            \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import {useEffect} from \"react\";\r\nimport Job from \"./Job\";\r\nimport chunk from 'lodash.chunk';\r\nimport Pagination from \"./Pagination\";\r\n\r\nfunction JobList({pages, jobs, pagesCounter, fromIndex, setfromIndex, toIndex, settoIndex,\r\n    chunkedPages, setChunkedPages, pageNum, setPageNum} ) {\r\n    \r\n\r\n    useEffect(() => {\r\n        setChunkedPages(chunk(pages, 100));\r\n    }, [pages, setChunkedPages]);\r\n\r\n    return (\r\n        <div className='grid gap-2'>\r\n            <div className='text-center bg-blue-500 p-1 text-white'>Found <span>{jobs.length} results</span></div>\r\n            <h2 className='font-bold text-center p-1 pl-3 rounded-full  px-3 bg-gray-100 inline-block text-blue-900' >Page <span className='pageNum'>{pageNum}</span> </h2>                    \r\n            <div>\r\n                {jobs.map((job, index) => {\r\n                    return index > fromIndex && index < toIndex && <Job key={index} index={index} job={job}/>\r\n                })}\r\n            </div>\r\n            <hr/>\r\n            \r\n            <Pagination \r\n            fromIndex={fromIndex}\r\n            setfromIndex={setfromIndex}\r\n            toIndex={toIndex}\r\n            settoIndex={settoIndex}\r\n            chunkedPages={chunkedPages}\r\n            setChunkedPages={setChunkedPages}\r\n            pageNum={pageNum}\r\n            setPageNum={setPageNum}\r\n            jobs={jobs}\r\n            pagesCounter={pagesCounter}\r\n             />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobList\r\n","import React from 'react'\r\n\r\nfunction Filters({setfromIndex, settoIndex, setPageNum, categories, setLimit, setCategory, setSearch, inputSearch, setInputSearch, setIsLoading}) {\r\n    const resetPage = () => {\r\n        setfromIndex(-1); settoIndex(10); setPageNum(1);\r\n    };\r\n    return (\r\n        <div className='filters grid gap-3'>\r\n            <select className='border p-1.5' onChange={(e)=>{\r\n                setCategory(e.target.value);\r\n                setIsLoading(true);\r\n                resetPage();\r\n            }}>\r\n                <option>Choose a job category</option>\r\n                <option>All jobs</option>\r\n                {categories.map( (category, index) => <option key={index} value={category.slug} >{category.name}</option>\r\n                 )}\r\n            </select>\r\n\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                setSearch(inputSearch);\r\n                setIsLoading(true);\r\n                resetPage();\r\n            }} className='border p-2'>\r\n                <label className='mb-2 block'  htmlFor=\"search\">Search job listing title and description</label>\r\n                <input className='pl-2 border' type=\"search\" id=\"search\"  onChange={ e => {\r\n                    setInputSearch((e.target.value));\r\n                }} />\r\n                <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' type=\"submit\">Go!</button>\r\n            </form>\r\n\r\n           <div className='border p-2 grid gap-1'>\r\n            <label  htmlFor=\"limit\">Limit the number of job listing result</label>\r\n                <input className='border w-20' type=\"number\" id=\"limit\" min=\"1\" onChange={ e => {\r\n                    setLimit(e.target.value);\r\n                    setIsLoading(true);\r\n                    resetPage();\r\n                }} /> <span>...will not work if all tree filters are selected, backend problem :(</span>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","\r\nfunction Header({ openFilters, setOpenFilters }) {\r\n    const filters = document.querySelector('.filters');\r\n    return (\r\n        <header className=\"flex bg-blue-400 p-3 pb-5\">\r\n            <h1 className=' text-white text-2xl text-center'>Remote Jobs</h1>\r\n            <button className='block  mt-2 bg-blue-500 text-white rounded-full  px-3 ml-auto' onClick={()=> {\r\n                setOpenFilters(openFilters => !openFilters);\r\n                !openFilters? filters.style = `display: grid`:filters.style = `display: none`\r\n                }}> {openFilters ? <span>Hide</span>: <span>Show</span> } filters</button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","function Footer({isLoading}) {\r\n    const footerStyles = {position:'absolute', bottom: 0};\r\n    return (\r\n        <footer style={isLoading ? footerStyles : {}} className='bg-blue-400 grid gap-2 text-white mt-2 text-center'>\r\n            <p className='py-2'>API Source: <a href=\"https://remotive.io/\" rel=\"noreferrer\" target=\"_blank\">https://remotive.io/api-documentation</a></p>\r\n            <p className='bg-blue-500 py-2'>Made by <a className='underline' href=\"https://github.com/BogdanCikota\" rel=\"noreferrer\" target=\"_blank\">Bogdan</a> </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction JobDescription() {\r\n    const location = useLocation();\r\n    const {description} = location.state;\r\n    \r\n    return (\r\n       <div className='bg-gray-50'>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold\"> &#8592; back</Link>\r\n        <div className='job-description p-2 text-blue-900 grid gap-2' dangerouslySetInnerHTML={{ __html: description }}></div>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold\"> &#8592; back</Link>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default JobDescription","\r\nfunction Loading() {\r\n    return (\r\n        <div className='grid gap-2'>\r\n            <h2 className='text-center bg-blue-500 p-1 text-white'>Loading...</h2>\r\n            <div className='rounded-full bg-gray-100 h-8' > </div>\r\n            <div>\r\n                <div className='bg-gray-50 p-3 h-32'></div>\r\n                <div className='bg-gray-100 p-3 h-32'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport JobList from \"./components/JobList\";\r\nimport Filters from \"./components/Filters\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport JobDescription from \"./components/JobDescription\";\r\nimport Loading from \"./components/Loading\";\r\n\r\n\r\nfunction App() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pagesCounter, setpagesCounter] = useState(0);\r\n    const [pages, setPages] = useState([]);\r\n    const [limit, setLimit] = useState('all');\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n   const [inputSearch, setInputSearch] = useState('');\r\n   const [search, setSearch] = useState('');\r\n   const [openFilters, setOpenFilters] = useState(false);\r\n   const [fromIndex, setfromIndex] =useState(-1);\r\n    const [toIndex, settoIndex]  = useState(10);\r\n    const [chunkedPages, setChunkedPages] = useState([]);\r\n    const [pageNum, setPageNum] = useState(1);\r\n\r\n    const getCategories = async() => {\r\n        try {\r\n            const response = await axios.get('https://remotive.io/api/remote-jobs/categories');\r\n            console.log(response.data.jobs);\r\n            setCategories(response.data.jobs);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n         const getJobs = async() => {\r\n            try {\r\n                const response = await axios.get(`https://remotive.io/api/remote-jobs?limit=${limit}&category=${category}&search=${search}`);\r\n                console.log(response.data.jobs);\r\n                setJobs(response.data.jobs);\r\n                setIsLoading(false);\r\n\r\n                let pagesArr = []\r\n\r\n                for (let i = 0; i < response.data.jobs.length / 10; i++) {\r\n                    pagesArr.push(i);\r\n                }\r\n\r\n                setpagesCounter(pagesArr.length);\r\n\r\n                setPages(pagesArr);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getJobs();\r\n        getCategories();\r\n    }, [limit, category, search]);\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <HashRouter basemname='/'>\r\n            <div className=\"max-w-sm m-auto\">\r\n                <Header openFilters={openFilters} setOpenFilters={setOpenFilters} />\r\n                \r\n                <Filters \r\n                setLimit={setLimit} \r\n                setCategory={setCategory} \r\n                setSearch={setSearch}\r\n                inputSearch={inputSearch}\r\n                setIsLoading={setIsLoading}\r\n                setInputSearch={setInputSearch}\r\n                categories={categories}\r\n                setfromIndex={setfromIndex}\r\n                settoIndex={settoIndex}\r\n                setPageNum={setPageNum}\r\n                />\r\n                \r\n                {isLoading\r\n                    ? <Loading/>:\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <JobList \r\n                                jobs={jobs} \r\n                                pages={pages} \r\n                                pagesCounter={pagesCounter} \r\n                                fromIndex={fromIndex} \r\n                                setfromIndex={setfromIndex}\r\n                                toIndex={toIndex} \r\n                                settoIndex={settoIndex}\r\n                                chunkedPages={chunkedPages} \r\n                                setChunkedPages={setChunkedPages}\r\n                                pageNum={pageNum} \r\n                                setPageNum={setPageNum}\r\n                                /> \r\n                            </Route>\r\n\r\n                            <Route exact path=\"/JobDescription\" component={JobDescription} />\r\n                        </Switch>\r\n                    \r\n                    }\r\n\r\n                    <hr />\r\n                    <Footer isLoading={isLoading} />\r\n            </div>\r\n        </HashRouter>\r\n   \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}