{"version":3,"sources":["components/jobList_components/Job.js","components/jobList_components/pagination_components/Pages.js","components/jobList_components/pagination_components/PrevButton.js","components/jobList_components/pagination_components/NextButton.js","components/jobList_components/Pagination.js","components/JobList.js","components/header_components/Filters.js","components/Header.js","components/Footer.js","components/JobDescription.js","components/Loading.js","components/ZeroResults.js","App.js","index.js"],"names":["Job","job","setJobPositionTop","onClick","e","window","screen","width","target","offsetTop","className","to","pathname","state","src","id","alt","company_name","title","category","candidate_required_location","Pages","pages","lastChunk","chunkIndex","numOfResults","chunk","setPageNum","setfromIndex","settoIndex","useState","lastNumInChunk","setLastNumInChunk","useEffect","filter","num","index","length","onChange","value","selectedIndex","map","PrevButton","pageNumElement","fromIndex","toIndex","disabled","innerHTML","NextButton","jobs","Pagination","goToPage","setgoToPage","chunkedPages","document","querySelector","JobList","openFilters","setChunkedPages","pageNum","Filters","setOpenFilters","categories","setLimit","setCategory","setSearch","inputSearch","setInputSearch","setIsLoading","selectedCategory","setselectedCategory","inputLimit","setInputLimit","onSubmit","preventDefault","slug","name","htmlFor","type","min","Header","location","reload","Footer","isLoading","href","rel","JobDescription","useLocation","str","publication_date","jobDate","Date","toUTCString","slice","scroll","jobDescription","i","children","classList","add","job_type","dangerouslySetInnerHTML","__html","description","Loading","hasData","ZeroResults","App","setJobs","pagesCounter","setpagesCounter","setPages","limit","setCategories","search","setHasData","jobPositionTop","getCategories","a","axios","get","response","console","log","data","error","pagesArr","push","getJobs","basemname","scrollTo","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b8c8bb96.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nfunction Job({job, setJobPositionTop}) {\r\n\r\n    return (\r\n        <Link onClick={e=>{window.screen.width < 640 ? setJobPositionTop(e.target.offsetTop - 40) : setJobPositionTop(e.target.offsetTop - 100)}} className={` job border-b  hover:bg-gray-50 p-4 block xl:p-4 xl:pl-6 lg:flex justify-between `} to={{pathname:\"/JobDescription\", state: {job: job}}}>\r\n            <div className='flex gap-4 xl:gap-5'>\r\n                <img src={`https://remotive.io/job/${job.id}/logo`} alt={`logo ${job.company_name}`} className='rounded-full w-16 h-16' />\r\n                <div>\r\n                    <h3 className='text-blue-400'>{job.company_name}</h3>\r\n                    <h2 className='text-blue-900 font-semibold'>{job.title}</h2>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='hidden text-blue-400 text-right text-sm lg:grid '>\r\n                <p>{job.category}</p>\r\n                <div>{job.candidate_required_location}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction Pages({setJobPositionTop, pages, lastChunk, chunkIndex, numOfResults, chunk, setPageNum, setfromIndex, settoIndex}) {\r\n    const [lastNumInChunk, setLastNumInChunk] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLastNumInChunk(chunk.filter((num, index) => chunk.length-1 === index))\r\n    }, [chunk])\r\n    return (\r\n        <select className='block m-auto border rounded-md' onChange={(e)=>{\r\n            let num = e.target.value;\r\n            setPageNum(+num + +1);\r\n            setfromIndex(num * numOfResults);\r\n            settoIndex(num * numOfResults+numOfResults);\r\n            e.target.selectedIndex = 0;\r\n            setJobPositionTop(0);\r\n        }}>\r\n            {\r\n                pages && pages.length > 100 ?\r\n                <option>{`${(chunkIndex+1)*100-100+1}-${lastChunk === chunkIndex ? +lastNumInChunk + +1 : (chunkIndex+1)*100}`}</option> :\r\n                <option>{`1-${+lastNumInChunk + +1}`}</option>\r\n            }\r\n            {\r\n                chunk.map((num, index) => <option key={index} value={num}>{num+1}</option> )\r\n            }\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react'\r\n\r\nfunction PrevButton({setJobPositionTop, numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button disabled={fromIndex === 0 ? true : false} className='font-bold bg-blue-500 xl:bg-blue-400 px-2 pb-0.5 rounded-full text-xl text-white' onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return pageNumCurrent-1\r\n            });\r\n            setfromIndex(fromIndex-numOfResults);\r\n            settoIndex(toIndex-numOfResults);\r\n            setJobPositionTop(0);\r\n        }}>&#60;</button>\r\n    )\r\n}\r\n\r\nexport default PrevButton\r\n","\r\nfunction NextButton({setJobPositionTop, jobs, numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button disabled={toIndex > jobs.length-1 ? true : false} className='font-bold bg-blue-500 xl:bg-blue-400 px-2 pb-0.5 rounded-full text-xl text-white'\r\n         onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return +pageNumCurrent + +1\r\n                });\r\n            setfromIndex(fromIndex+numOfResults);\r\n            settoIndex(toIndex+numOfResults);\r\n            setJobPositionTop(0);\r\n        }}>&#62;</button>\r\n    )\r\n}\r\n\r\nexport default NextButton\r\n","import Pages from \"./pagination_components/Pages\";\r\nimport PrevButton from \"./pagination_components/PrevButton\";\r\nimport NextButton from \"./pagination_components/NextButton\";\r\n\r\nfunction Pagination({setJobPositionTop, goToPage, setgoToPage, numOfResults, jobs, fromIndex, setPageNum, setfromIndex, settoIndex, toIndex, pages, chunkedPages }) {\r\n\r\n    const pageNumElement = document.querySelector('.pageNum');\r\n\r\n    \r\n\r\n    return (\r\n            <div className='m-auto my-4 flex gap-6 justify-center mb-1.5 items-center'>\r\n                <PrevButton \r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                setJobPositionTop={setJobPositionTop}\r\n                />\r\n                {pages && pages.length > 100 && !goToPage && <button onClick={(e)=> {\r\n                     setgoToPage(!goToPage);\r\n                     setJobPositionTop(e.target.offsetTop);\r\n                    }} className='rounded-lg px-1  bg-blue-500 xl:bg-blue-400 text-white'>Go to page...</button>}\r\n\r\n            { \r\n                // generate from/to select\r\n                goToPage && pages.length > 100 && \r\n                <div className='grid gap-3 sm:flex'>\r\n                    {\r\n                        chunkedPages.map((chunk, index) => {\r\n                            return <Pages\r\n                                    key={index}\r\n                                    pages={pages}\r\n                                    lastChunk={chunkedPages.length-1}\r\n                                    chunkIndex={index}\r\n                                    chunk={chunk}\r\n                                    setPageNum={setPageNum}\r\n                                    setfromIndex={setfromIndex}\r\n                                    settoIndex={settoIndex}\r\n                                    numOfResults={numOfResults}\r\n                                    setJobPositionTop={setJobPositionTop}\r\n                                    />\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n\r\n            {\r\n               chunkedPages.length > 0 &&  pages.length < 100 && \r\n                <Pages\r\n                chunk={chunkedPages[0]}\r\n                setPageNum={setPageNum} \r\n                setfromIndex={setfromIndex} \r\n                settoIndex={settoIndex}\r\n                numOfResults={numOfResults}\r\n                setJobPositionTop={setJobPositionTop}\r\n                /> \r\n            }\r\n\r\n                <NextButton\r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                jobs={jobs}\r\n                setJobPositionTop={setJobPositionTop}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import {useEffect} from \"react\";\r\nimport Job from \"./jobList_components/Job\";\r\nimport chunk from 'lodash.chunk';\r\nimport Pagination from \"./jobList_components/Pagination\";\r\n\r\nfunction JobList({setJobPositionTop, openFilters, goToPage, setgoToPage, pages, jobs, fromIndex, setfromIndex, toIndex, settoIndex,\r\n    chunkedPages, setChunkedPages, pageNum, setPageNum, numOfResults} ) {\r\n\r\n    useEffect(() => {\r\n        //divide pages array into 100 chunks\r\n        setChunkedPages(chunk(pages, 100));\r\n    }, [pages, setChunkedPages]);\r\n\r\n    return (\r\n        <main className={` ${!openFilters && `md:mt-16`} grid mb-2 md:mx-auto md:w-2/3 md:items-start`}>\r\n            <div className={`${openFilters ? `md:bg-opacity-30 bg-blue-400` : `bg-blue-500`} text-center  p-1 text-white mb-4 md:rounded-b-full md:bg-blue-300 xl:p-1.5`}>Found <span>{jobs.length} results</span></div>\r\n            <h2 className={`${jobs.length < numOfResults ?  `hidden`:`inline-block`} font-bold text-center text-blue-900`} >Page <span className='pageNum'>{pageNum}</span> </h2>                    \r\n            \r\n            <div className='jobs-container'>\r\n                {jobs.map((job, index) => {\r\n                    return index >= fromIndex && index < toIndex && <Job key={index} job={job} setJobPositionTop={setJobPositionTop}/>\r\n                })}\r\n            </div>\r\n            \r\n\r\n            <h2 className={`${jobs.length < numOfResults ? `hidden`:`inline-block`} font-bold text-center text-blue-900`} >Page <span className='pageNum'>{pageNum}</span> </h2>\r\n            \r\n            {\r\n                jobs.length > numOfResults  && \r\n                \r\n                <Pagination \r\n                fromIndex={fromIndex}\r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                chunkedPages={chunkedPages}\r\n                setChunkedPages={setChunkedPages}\r\n                pageNum={pageNum}\r\n                setPageNum={setPageNum}\r\n                jobs={jobs}\r\n                pages={pages}\r\n                numOfResults={numOfResults}\r\n                goToPage={goToPage}\r\n                setgoToPage={setgoToPage}\r\n                setJobPositionTop={setJobPositionTop}\r\n                />\r\n            }\r\n            \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default JobList\r\n","import React, { useState } from 'react'\r\n\r\nfunction Filters({setOpenFilters, setgoToPage, numOfResults, setfromIndex, settoIndex, setPageNum, categories, setLimit, setCategory, setSearch, inputSearch, setInputSearch, setIsLoading}) {\r\n\r\n    const [selectedCategory, setselectedCategory] = useState('');\r\n    const [inputLimit, setInputLimit] = useState(0);\r\n    \r\n    const resetPage = () => {\r\n        setfromIndex(0);\r\n        settoIndex(numOfResults);\r\n        setPageNum(1);\r\n        setgoToPage(false);\r\n        setOpenFilters(false);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        //api state\r\n        setLimit('all');\r\n        setCategory(''); \r\n        setSearch('');\r\n        //local state\r\n        setselectedCategory('Choose a job category');\r\n        setInputSearch('');\r\n        setInputLimit('');\r\n        setOpenFilters(false);\r\n        //dom\r\n        document.querySelector('select').selectedIndex = 0;\r\n        document.querySelector('#search').value = '';\r\n        document.querySelector('#limit').value = '';\r\n    };\r\n\r\n    \r\n    return (\r\n        <form className='pb-6 grid gap-3 bg-white md:p-5 md:rounded-lg md:gap-6' onSubmit={e => {\r\n                    e.preventDefault();\r\n                    setCategory(selectedCategory);\r\n                    setSearch(inputSearch);\r\n                    setLimit(inputLimit);\r\n                    setIsLoading(true);\r\n                    resetPage();\r\n                    }}>\r\n            <select className='border p-1.5' onChange={(e)=>{\r\n                setselectedCategory(e.target.value);\r\n            }}>\r\n                <option>Choose a job category</option>\r\n                <option>All jobs</option>\r\n                {categories.map( (category, index) => <option key={index} value={category.slug} >{category.name}</option>\r\n                 )}\r\n            </select>\r\n\r\n            <div className='border p-2'>\r\n                <label className='mb-2 block'  htmlFor=\"search\">Search job listing title and description</label>\r\n                 <input className='pl-2 border' type=\"search\" id=\"search\"  onChange={ e => {\r\n                    setInputSearch((e.target.value));\r\n                }} />\r\n            </div>\r\n\r\n            <div className='border p-2'>\r\n                <label className='block'  htmlFor=\"limit\">Limit the number of job listing result <span className='text-sm italic'>(will not work with search input, API problem)</span></label>\r\n                <input className='border w-20 my-1.5' type=\"number\" id=\"limit\" min=\"1\" onChange={ e => {\r\n                    setInputLimit(e.target.value);\r\n                }} />\r\n            </div>\r\n\r\n            <div className='flex justify-evenly mt-2 xl:justify-center xl:gap-14 xl:mt-0'>\r\n                <button className=' rounded-lg px-4 py-1  bg-blue-400 text-white' type=\"submit\">Go!</button>\r\n                <button className=' rounded-lg px-4 py-1  bg-blue-400 text-white' onClick={resetFilters}>Reset</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","import Filters from \"./header_components/Filters\";\r\n\r\nfunction Header({setJobPositionTop, openFilters, setOpenFilters, setgoToPage, numOfResults, setfromIndex, settoIndex, setPageNum, categories, setLimit, setCategory, setSearch, inputSearch, setInputSearch, setIsLoading }) {\r\n\r\n    return (\r\n        <header className={`${!openFilters ? `pb-3` : `md:pb-4 md:bg-opacity-60`} bg-blue-400 grid grid-cols-3 md:grid-cols-7 md:fixed w-full left-0 top-0 md:px-7  md:gap-3`}>\r\n            <h1 className='col-span-2 m-3 mb-2  text-white text-2xl cursor-pointer' onClick={()=> window.location.reload()}>Remote Jobs</h1>\r\n            <button className={`${openFilters ? `bg-opacity-0 mr-6 md:self-start md:mt-2` : `mt-3` } mr-3  rounded-2xl px-2 py-1 col-start-3 justify-self-end self-center bg-blue-500 text-white  md:col-start-7 md:px-3`} \r\n            onClick={()=> {\r\n                setJobPositionTop(0);\r\n                setOpenFilters(openFilters => !openFilters);\r\n                }}> {openFilters ? <span className='text-xl md:text-2xl'>x</span> : <span >Filters</span> }  \r\n            </button>\r\n            \r\n            <div className={`${openFilters ? `col-span-full md:col-start-2 md:col-end-7  xl:col-start-3 xl:col-end-6 xl:row-span-full` : `hidden`} md:mt-5 md:mb-1 `}>\r\n                <Filters \r\n                setLimit={setLimit} \r\n                setCategory={setCategory} \r\n                setSearch={setSearch}\r\n                inputSearch={inputSearch}\r\n                setIsLoading={setIsLoading}\r\n                setInputSearch={setInputSearch}\r\n                categories={categories}\r\n                setfromIndex={setfromIndex}\r\n                settoIndex={settoIndex}\r\n                setPageNum={setPageNum}\r\n                numOfResults={numOfResults}\r\n                setgoToPage={setgoToPage}\r\n                setOpenFilters={setOpenFilters}\r\n                />\r\n            </div>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","function Footer({isLoading}) {\r\n\r\n    return (\r\n        <footer className={`${isLoading && `fixed bottom-0 left-0 w-full`} text-white mt-4 text-center`}>\r\n            <p className='py-2 bg-blue-400 md:mx-40 lg:mx-50 xl:mx-60 md:rounded-t-full xl:bg-blue-300  xl:p-1.5'>API Source: <a href=\"https://remotive.io/api-documentation\" rel=\"noreferrer\" target=\"_blank\">https://remotive.io/api-documentation</a></p>\r\n            <p className='bg-blue-500 py-2'>Made by <a className='underline' href=\"https://github.com/BogdanCikota\" rel=\"noreferrer\" target=\"_blank\">Bogdan</a> </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction JobDescription() {\r\n    const location = useLocation();\r\n    const {job} = location.state;\r\n    const str = job.publication_date;\r\n    let date = new Date(str + \"Z\");\r\n\r\n    let jobDate = date.toUTCString();\r\n    jobDate = jobDate.slice(5,16);\r\n\r\n    useEffect(() => {\r\n        window.scroll(0,0);\r\n        let jobDescription = document.querySelector('.job-description');\r\n        for (let i = 0; i < jobDescription.children.length; i++) {\r\n            if(jobDescription.children[i].innerHTML === '&nbsp;' || jobDescription.children[i].innerHTML === '' || jobDescription.children[i].innerHTML === '<br><br>' || jobDescription.children[i].innerHTML === '<br>') {\r\n                jobDescription.children[i].classList.add('hidden');\r\n            }\r\n            \r\n        }\r\n    }, [job])\r\n    \r\n    return (\r\n       <div className='xl:mt-16 xl:m-auto xl:max-w-5xl xl:p-4 text-gray-800'>\r\n        <Link to='/' className=\"ml-2 underline font-semibold lg:text-lg\"> &#8592; back</Link>\r\n        \r\n        <div className='xl:flex gap-2 px-4 xl:px-0'>\r\n            <div className='w-20 h-20 m-auto xl:border xl:p-3 xl:m-0 xl:w-auto xl:h-auto self-center'>\r\n                <img className='rounded-full xl:rounded-none' src={`https://remotive.io/job/${job.id}/logo`} alt={`logo ${job.company_name}`} />\r\n            </div>\r\n           \r\n            <div className='font-semibold p-2 xl:grid gap-2'>\r\n                <h3><span className='font-bold' >{job.company_name}</span> </h3>\r\n                <h2>Job title: {job.title}</h2>\r\n                <p>Category:  <span className='font-normal'>{job.category}</span> </p>\r\n                <div>\r\n                    <div className='inline'>{job.candidate_required_location === '' ? <span>/</span> : <span className='font-normal'>{job.candidate_required_location}</span> } </div> /\r\n                    <div className='inline'> {job.job_type ? <span className='font-normal'>{job.job_type}</span> : <span>/</span> } </div>\r\n                </div>\r\n                <div>Published: <span className='font-normal'>{jobDate}</span> </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='border job-description py-3 px-5 w-screen overflow-scroll sm:w-full sm:overflow-visible grid gap-4 leading-relaxed' dangerouslySetInnerHTML={{ __html: job.description }}></div>\r\n        <Link to='/' className=\"ml-2 underline font-semibold lg:text-lg\"> &#8592; back</Link>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default JobDescription","\r\nfunction Loading({hasData}) {\r\n    return (\r\n        <div className='loading grid gap-0.5 mb-2 md:mx-40 md:mt-16 xl:mt-16 xl:m-auto xl:w-2/3'>\r\n            <div className='bg-blue-500 text-center  p-1 text-white mb-4 md:rounded-b-full md:bg-blue-300 xl:p-1.5'>\r\n                {hasData ? <span>Loading...</span> : <span>No data! Try again later!</span>}\r\n            </div>\r\n            <div>\r\n                <div className='job border-b hover:bg-gray-50 h-24'></div>\r\n                <div className='job border-b hover:bg-gray-50 h-24'></div>\r\n                <div className='job border-b hover:bg-gray-50 h-24'></div>\r\n                <div className='hidden job border-b hover:bg-gray-50 xl:block h-24'></div>\r\n                <div className='hidden job border-b hover:bg-gray-50 xl:block h-24'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","\r\nfunction ZeroResults() {\r\n    return (\r\n        <div className='loading grid gap-0.5 mb-2 xl:mt-16 xl:m-auto xl:w-2/3'>\r\n            <div className='bg-blue-500 text-center  p-1 text-white mb-4 xl:bg-blue-300 xl:rounded-b-full xl:p-1.5'>0 results</div>\r\n            <div>\r\n                <div className='job border-b hover:bg-gray-50 h-24'></div>\r\n                <div className='job border-b hover:bg-gray-50 h-24'></div>\r\n                <div className='job border-b hover:bg-gray-50 h-24'></div>\r\n                <div className='hidden job border-b hover:bg-gray-50 xl:block h-24'></div>\r\n                <div className='hidden job border-b hover:bg-gray-50 xl:block h-24'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ZeroResults\r\n","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport JobList from \"./components/JobList\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport JobDescription from \"./components/JobDescription\";\r\nimport Loading from \"./components/Loading\";\r\nimport ZeroResults from \"./components/ZeroResults\";\r\n\r\n\r\nfunction App() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pagesCounter, setpagesCounter] = useState(0);\r\n    const [pages, setPages] = useState([]);\r\n    const [limit, setLimit] = useState('all');\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [inputSearch, setInputSearch] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [openFilters, setOpenFilters] = useState(false);\r\n    const [fromIndex, setfromIndex] =useState(0);\r\n    const numOfResults = 10;\r\n    const [toIndex, settoIndex]  = useState(numOfResults);\r\n    const [chunkedPages, setChunkedPages] = useState([]);\r\n    const [pageNum, setPageNum] = useState(1);\r\n    const [goToPage, setgoToPage] = useState(false);\r\n    const [hasData, setHasData] = useState(true);\r\n    const [jobPositionTop, setJobPositionTop] = useState(0);\r\n    \r\n\r\n    const getCategories = async() => {\r\n        try {\r\n            const response = await axios.get('https://remotive.io/api/remote-jobs/categories');\r\n            console.log(response.data.jobs);\r\n            setCategories(response.data.jobs);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            setHasData(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n         const getJobs = async() => {\r\n            try {\r\n                const response = await axios.get(`https://remotive.io/api/remote-jobs?limit=${limit}&category=${category}&search=${search}`);\r\n                console.log(response.data.jobs);\r\n                setJobs(response.data.jobs);\r\n                setIsLoading(false);\r\n\r\n                let pagesArr = []\r\n\r\n                for (let i = 0; i < response.data.jobs.length / numOfResults; i++) {\r\n                    pagesArr.push(i);\r\n                }\r\n\r\n                setpagesCounter(pagesArr.length);\r\n\r\n                setPages(pagesArr);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getJobs();\r\n        getCategories();\r\n    }, [limit, category, search]);\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <HashRouter basemname='/'>\r\n            <div className=\"App grid\">\r\n                <Header \r\n                openFilters={openFilters} \r\n                setOpenFilters={setOpenFilters}\r\n                setLimit={setLimit} \r\n                setCategory={setCategory} \r\n                setSearch={setSearch}\r\n                inputSearch={inputSearch}\r\n                setIsLoading={setIsLoading}\r\n                setInputSearch={setInputSearch}\r\n                categories={categories}\r\n                setfromIndex={setfromIndex}\r\n                settoIndex={settoIndex}\r\n                setPageNum={setPageNum}\r\n                numOfResults={numOfResults}\r\n                setgoToPage={setgoToPage}\r\n                setJobPositionTop={setJobPositionTop}\r\n                />\r\n                \r\n                \r\n                \r\n                {isLoading ? <Loading hasData={hasData} />:\r\n                    \r\n                    jobs.length === 0 ? <ZeroResults/> :\r\n                        <Switch \r\n                        onClick={window.scrollTo(0, jobPositionTop)}\r\n                        >\r\n                            <Route exact path=\"/\">\r\n                                <JobList \r\n                                jobs={jobs} \r\n                                pages={pages} \r\n                                pagesCounter={pagesCounter} \r\n                                fromIndex={fromIndex} \r\n                                setfromIndex={setfromIndex}\r\n                                toIndex={toIndex} \r\n                                settoIndex={settoIndex}\r\n                                chunkedPages={chunkedPages} \r\n                                setChunkedPages={setChunkedPages}\r\n                                pageNum={pageNum} \r\n                                setPageNum={setPageNum}\r\n                                numOfResults={numOfResults}\r\n                                goToPage={goToPage}\r\n                                setgoToPage={setgoToPage}\r\n                                openFilters={openFilters}\r\n                                setJobPositionTop={setJobPositionTop}\r\n                                /> \r\n                            </Route>\r\n\r\n                            <Route exact path=\"/JobDescription\" component={JobDescription} />\r\n                        </Switch>\r\n                    \r\n                    }\r\n\r\n                    <Footer isLoading={isLoading} />\r\n            </div>\r\n        </HashRouter>\r\n   \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}