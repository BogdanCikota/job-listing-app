{"version":3,"sources":["components/jobList_components/Job.js","components/jobList_components/pagination_components/Pages.js","components/jobList_components/pagination_components/PrevButton.js","components/jobList_components/pagination_components/NextButton.js","components/jobList_components/Pagination.js","components/JobList.js","components/Filters.js","components/Header.js","components/Footer.js","components/JobDescription.js","components/Loading.js","App.js","index.js"],"names":["Job","job","index","className","company_name","category","candidate_required_location","job_type","publication_date","onClick","window","scroll","to","pathname","state","description","Pages","numOfResults","chunk","setPageNum","setfromIndex","settoIndex","map","page","PrevButton","pageNumElement","fromIndex","toIndex","innerHTML","NextButton","Pagination","jobs","pagesCounter","chunkedPages","useState","fromOne","setfromOne","fromHundred","setfromHundred","fromTwoHundred","setfromTwoHundred","document","querySelector","disabled","length","prev","JobList","pages","setChunkedPages","pageNum","useEffect","Filters","categories","setLimit","setCategory","setSearch","inputSearch","setInputSearch","setIsLoading","resetPage","onChange","e","target","value","slug","name","onSubmit","preventDefault","htmlFor","type","id","min","Header","openFilters","setOpenFilters","filters","style","Footer","href","rel","JobDescription","useLocation","dangerouslySetInnerHTML","__html","Loading","App","setJobs","isLoading","setpagesCounter","setPages","limit","setCategories","search","getCategories","a","axios","get","response","console","log","data","error","pagesArr","i","push","getJobs","basemname","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4359a471.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Job({job, index}) {\r\n\r\n    const goToTop = () => {\r\n        window.scroll(0,0);\r\n    }\r\n\r\n    return (\r\n        <div className={index%2 !== 0 ? 'bg-gray-100 p-3': 'bg-gray-50 p-3'}>\r\n            <h3 className='text-blue-900 font-semibold'>Company: <span className='font-bold' >{job.company_name}</span> </h3>\r\n            <p className='text-blue-900 font-semibold'>Category: <span className='font-normal'>{job.category}</span> </p>\r\n            <div className='text-blue-900 font-semibold'>Required location: {job.candidate_required_location === '' ? <span>/</span> : <span className='font-normal'>{job.candidate_required_location}</span> } </div>\r\n            <div className='text-blue-900 font-semibold'>Job Type: {job.job_type ? <span className='font-normal'>{job.job_type}</span> : <span>/</span> } </div>\r\n            <div className='text-blue-900 font-semibold'>Published: <span className='font-normal'>{job.publication_date}</span> </div>\r\n            <Link onClick={goToTop} className='text-blue-900 font-semibold' to={{pathname:\"/JobDescription\", state: {description: job.description}}}>Read more...</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","\r\nfunction Pages({numOfResults, chunk, setPageNum, setfromIndex, settoIndex}) {\r\n    return (\r\n        <div className='p-2 grid grid-cols-8 gap-2 col-span-full' >\r\n            {   \r\n                chunk.map((page, index) => {\r\n                return <button className='rounded-lg px-1  bg-blue-400 text-white' key={index} onClick={()=>{\r\n                        \r\n                        setPageNum(page+1);\r\n\r\n                        setfromIndex(page*numOfResults);\r\n\r\n                        settoIndex(page*numOfResults+numOfResults);\r\n                    }}>\r\n                        {page+1}\r\n                    </button>\r\n                } )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react'\r\n\r\nfunction PrevButton({numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return pageNumCurrent-1\r\n            });\r\n            setfromIndex(fromIndex-numOfResults);\r\n            settoIndex(toIndex-numOfResults);\r\n        }}>prev</button>\r\n    )\r\n}\r\n\r\nexport default PrevButton\r\n","\r\nfunction NextButton({numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return +pageNumCurrent + +1\r\n                });\r\n            setfromIndex(fromIndex+numOfResults);\r\n            settoIndex(toIndex+numOfResults);\r\n        }}>next</button>\r\n    )\r\n}\r\n\r\nexport default NextButton\r\n","import { useState } from \"react\";\r\nimport Pages from \"./pagination_components/Pages\";\r\nimport PrevButton from \"./pagination_components/PrevButton\";\r\nimport NextButton from \"./pagination_components/NextButton\";\r\n\r\nfunction Pagination({numOfResults, jobs, fromIndex, setPageNum, setfromIndex, settoIndex, toIndex, pagesCounter, chunkedPages }) {\r\n    const [fromOne, setfromOne] = useState(false);\r\n    const [fromHundred, setfromHundred] = useState(false);\r\n    const [fromTwoHundred, setfromTwoHundred] = useState(false);\r\n\r\n    const pageNumElement = document.querySelector('.pageNum');\r\n\r\n    return (\r\n        <div className='grid gap-2'>\r\n            {/* prev button */}\r\n            <div className='grid grid-cols-2'>\r\n            {\r\n                fromIndex === 0 ? <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' disabled>prev</button> : \r\n                <PrevButton \r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                />\r\n            }\r\n\r\n            {/* next button */}\r\n            {\r\n                toIndex > jobs.length-1 ? <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' disabled>next</button> :\r\n                <NextButton\r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                />    \r\n            }\r\n\r\n            {\r\n                // render pages buttons\r\n                pagesCounter <= 100 && \r\n                chunkedPages.map((chunk, index) => \r\n                <Pages  \r\n                key={index} \r\n                chunk={chunk} \r\n                setPageNum={setPageNum} \r\n                setfromIndex={setfromIndex} \r\n                settoIndex={settoIndex}\r\n                numOfResults={numOfResults}\r\n                /> )\r\n            }\r\n\r\n            </div>\r\n         \r\n            { \r\n                //from-to buttons\r\n                pagesCounter > 100 && <div className='grid grid-cols-3'>\r\n                    <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                        setfromOne(prev=>!prev);\r\n                        setfromHundred(false);\r\n                        setfromTwoHundred(false)\r\n                    }}>1...100</button>\r\n                    {pagesCounter > 100 && <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                        setfromHundred(prev=>!prev);\r\n                        setfromOne(false);\r\n                    }}>100...200</button>}\r\n                    {pagesCounter > 200 &&<button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' onClick={()=>{\r\n                        setfromTwoHundred(prev=>!prev)\r\n                        setfromOne(false);\r\n                        setfromHundred(false)\r\n                    }}>200...</button>}\r\n                </div>\r\n            }\r\n\r\n            <hr />\r\n\r\n            {\r\n                // render pages buttons when clicked from-to button\r\n                fromOne ? chunkedPages.map((chunk, index)=> index === 0 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} /> ) :\r\n                fromHundred ? chunkedPages.map((chunk, index)=> index === 1 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} /> ) :\r\n                fromTwoHundred && chunkedPages.map((chunk, index)=> index === 2 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} />)\r\n            }\r\n\r\n            \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import {useEffect} from \"react\";\r\nimport Job from \"./jobList_components/Job\";\r\nimport chunk from 'lodash.chunk';\r\nimport Pagination from \"./jobList_components/Pagination\";\r\n\r\nfunction JobList({pages, jobs, pagesCounter, fromIndex, setfromIndex, toIndex, settoIndex,\r\n    chunkedPages, setChunkedPages, pageNum, setPageNum, numOfResults} ) {\r\n    \r\n\r\n    useEffect(() => {\r\n        //divide pages array into 100 chunks\r\n        setChunkedPages(chunk(pages, 100));\r\n    }, [pages, setChunkedPages]);\r\n\r\n    return (\r\n        <div className='grid gap-2'>\r\n            <div className='text-center bg-blue-500 p-1 text-white'>Found <span>{jobs.length} results</span></div>\r\n            <h2 className='font-bold text-center p-1 pl-3 rounded-full  px-3 bg-gray-100 inline-block text-blue-900' >Page <span className='pageNum'>{pageNum}</span> </h2>                    \r\n            <div>\r\n                {jobs.map((job, index) => {\r\n                    return index >= fromIndex && index < toIndex && <Job key={index} index={index} job={job}/>\r\n                })}\r\n            </div>\r\n            <hr/>\r\n            \r\n            <Pagination \r\n            fromIndex={fromIndex}\r\n            setfromIndex={setfromIndex}\r\n            toIndex={toIndex}\r\n            settoIndex={settoIndex}\r\n            chunkedPages={chunkedPages}\r\n            setChunkedPages={setChunkedPages}\r\n            pageNum={pageNum}\r\n            setPageNum={setPageNum}\r\n            jobs={jobs}\r\n            pagesCounter={pagesCounter}\r\n            numOfResults={numOfResults}\r\n             />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobList\r\n","import React from 'react'\r\n\r\nfunction Filters({numOfResults, setfromIndex, settoIndex, setPageNum, categories, setLimit, setCategory, setSearch, inputSearch, setInputSearch, setIsLoading}) {\r\n    const resetPage = () => {\r\n        setfromIndex(0); settoIndex(numOfResults); setPageNum(1);\r\n    };\r\n    return (\r\n        <div className='filters grid gap-3'>\r\n            <select className='border p-1.5' onChange={(e)=>{\r\n                setCategory(e.target.value);\r\n                setIsLoading(true);\r\n                resetPage();\r\n            }}>\r\n                <option>Choose a job category</option>\r\n                <option>All jobs</option>\r\n                {categories.map( (category, index) => <option key={index} value={category.slug} >{category.name}</option>\r\n                 )}\r\n            </select>\r\n\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                setSearch(inputSearch);\r\n                setIsLoading(true);\r\n                resetPage();\r\n            }} className='border p-2'>\r\n                <label className='mb-2 block'  htmlFor=\"search\">Search job listing title and description</label>\r\n                <input className='pl-2 border' type=\"search\" id=\"search\"  onChange={ e => {\r\n                    setInputSearch((e.target.value));\r\n                }} />\r\n                <button className='ml-2 rounded-lg px-1  bg-blue-500 text-white' type=\"submit\">Go!</button>\r\n            </form>\r\n\r\n           <div className='border p-2 grid gap-1'>\r\n            <label  htmlFor=\"limit\">Limit the number of job listing result</label>\r\n                <input className='border w-20' type=\"number\" id=\"limit\" min=\"1\" onChange={ e => {\r\n                    setLimit(e.target.value);\r\n                    setIsLoading(true);\r\n                    resetPage();\r\n                }} /> <span>...will not work if all tree filters are selected, backend problem :(</span>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","\r\nfunction Header({ openFilters, setOpenFilters }) {\r\n    const filters = document.querySelector('.filters');\r\n    return (\r\n        <header className=\"flex bg-blue-400 p-3 pb-5\">\r\n            <h1 className=' text-white text-2xl text-center'>Remote Jobs</h1>\r\n            <button className='block  mt-2 bg-blue-500 text-white rounded-full  px-3 ml-auto' onClick={()=> {\r\n                setOpenFilters(openFilters => !openFilters);\r\n                !openFilters? filters.style = `display: grid`:filters.style = `display: none`\r\n                }}> {openFilters ? <span>Hide</span>: <span>Show</span> } filters</button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","function Footer() {\r\n    \r\n    return (\r\n        <footer className='bg-blue-400 grid gap-2 text-white mt-2 text-center'>\r\n            <p className='py-2'>API Source: <a href=\"https://remotive.io/\" rel=\"noreferrer\" target=\"_blank\">https://remotive.io/api-documentation</a></p>\r\n            <p className='bg-blue-500 py-2'>Made by <a className='underline' href=\"https://github.com/BogdanCikota\" rel=\"noreferrer\" target=\"_blank\">Bogdan</a> </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction JobDescription() {\r\n    const location = useLocation();\r\n    const {description} = location.state;\r\n    \r\n    return (\r\n       <div className='bg-gray-50'>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold\"> &#8592; back</Link>\r\n        <div className='job-description p-2 text-blue-900 grid gap-2' dangerouslySetInnerHTML={{ __html: description }}></div>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold\"> &#8592; back</Link>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default JobDescription","\r\nfunction Loading() {\r\n    return (\r\n        <div className='grid gap-2'>\r\n            <h2 className='text-center bg-blue-500 p-1 text-white'>Loading...</h2>\r\n            <div className='rounded-full bg-gray-100 h-8' > </div>\r\n            <div>\r\n                <div className='bg-gray-50 p-3 h-32'></div>\r\n                <div className='bg-gray-100 p-3 h-32'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport JobList from \"./components/JobList\";\r\nimport Filters from \"./components/Filters\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport JobDescription from \"./components/JobDescription\";\r\nimport Loading from \"./components/Loading\";\r\n\r\n\r\nfunction App() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pagesCounter, setpagesCounter] = useState(0);\r\n    const [pages, setPages] = useState([]);\r\n    const [limit, setLimit] = useState('all');\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [inputSearch, setInputSearch] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [openFilters, setOpenFilters] = useState(false);\r\n    const [fromIndex, setfromIndex] =useState(0);\r\n    const numOfResults = 7;\r\n    const [toIndex, settoIndex]  = useState(numOfResults);\r\n    const [chunkedPages, setChunkedPages] = useState([]);\r\n    const [pageNum, setPageNum] = useState(1);\r\n    \r\n\r\n    const getCategories = async() => {\r\n        try {\r\n            const response = await axios.get('https://remotive.io/api/remote-jobs/categories');\r\n            console.log(response.data.jobs);\r\n            setCategories(response.data.jobs);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n         const getJobs = async() => {\r\n            try {\r\n                const response = await axios.get(`https://remotive.io/api/remote-jobs?limit=${limit}&category=${category}&search=${search}`);\r\n                console.log(response.data.jobs);\r\n                setJobs(response.data.jobs);\r\n                setIsLoading(false);\r\n\r\n                let pagesArr = []\r\n\r\n                for (let i = 0; i < response.data.jobs.length / numOfResults; i++) {\r\n                    pagesArr.push(i);\r\n                }\r\n\r\n                setpagesCounter(pagesArr.length);\r\n\r\n                setPages(pagesArr);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getJobs();\r\n        getCategories();\r\n    }, [limit, category, search]);\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <HashRouter basemname='/'>\r\n            <div className=\"max-w-sm m-auto\">\r\n                <Header openFilters={openFilters} setOpenFilters={setOpenFilters} />\r\n                \r\n                <Filters \r\n                setLimit={setLimit} \r\n                setCategory={setCategory} \r\n                setSearch={setSearch}\r\n                inputSearch={inputSearch}\r\n                setIsLoading={setIsLoading}\r\n                setInputSearch={setInputSearch}\r\n                categories={categories}\r\n                setfromIndex={setfromIndex}\r\n                settoIndex={settoIndex}\r\n                setPageNum={setPageNum}\r\n                numOfResults={numOfResults}\r\n                />\r\n                \r\n                {isLoading\r\n                    ? <Loading/>:\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <JobList \r\n                                jobs={jobs} \r\n                                pages={pages} \r\n                                pagesCounter={pagesCounter} \r\n                                fromIndex={fromIndex} \r\n                                setfromIndex={setfromIndex}\r\n                                toIndex={toIndex} \r\n                                settoIndex={settoIndex}\r\n                                chunkedPages={chunkedPages} \r\n                                setChunkedPages={setChunkedPages}\r\n                                pageNum={pageNum} \r\n                                setPageNum={setPageNum}\r\n                                numOfResults={numOfResults}\r\n                                /> \r\n                            </Route>\r\n\r\n                            <Route exact path=\"/JobDescription\" component={JobDescription} />\r\n                        </Switch>\r\n                    \r\n                    }\r\n\r\n                    <hr />\r\n                    <Footer />\r\n            </div>\r\n        </HashRouter>\r\n   \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}