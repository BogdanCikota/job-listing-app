{"version":3,"sources":["components/jobList_components/Job.js","components/jobList_components/pagination_components/Pages.js","components/jobList_components/pagination_components/PrevButton.js","components/jobList_components/pagination_components/NextButton.js","components/jobList_components/Pagination.js","components/JobList.js","components/header_components/Filters.js","components/Header.js","components/Footer.js","components/JobDescription.js","components/Loading.js","components/ZeroResults.js","App.js","index.js"],"names":["Job","job","index","onClick","window","scroll","className","to","pathname","state","src","id","alt","company_name","title","category","candidate_required_location","Pages","goToTop","numOfResults","chunk","setPageNum","setfromIndex","settoIndex","onChange","e","num","target","value","selectedIndex","map","page","PrevButton","pageNumElement","fromIndex","toIndex","disabled","innerHTML","NextButton","jobs","length","Pagination","goToPage","setgoToPage","pagesCounter","chunkedPages","useState","fromOne","setfromOne","fromHundred","setfromHundred","fromTwoHundred","setfromTwoHundred","document","querySelector","prev","JobList","openFilters","pages","setChunkedPages","pageNum","useEffect","Filters","setOpenFilters","categories","setLimit","setCategory","setSearch","inputSearch","setInputSearch","setIsLoading","selectedCategory","setselectedCategory","inputLimit","setInputLimit","onSubmit","preventDefault","slug","name","htmlFor","type","min","Header","location","reload","Footer","isLoading","href","rel","JobDescription","useLocation","str","publication_date","jobDate","Date","toUTCString","slice","job_type","dangerouslySetInnerHTML","__html","description","Loading","hasData","ZeroResults","App","setJobs","setpagesCounter","setPages","limit","setCategories","search","setHasData","getCategories","a","axios","get","response","console","log","data","error","pagesArr","i","push","getJobs","basemname","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f7d4f39e.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Job({job, index}) {\r\n\r\n    const goToTop = () => {\r\n        window.scroll(0,0);\r\n    } \r\n\r\n    return (\r\n        <Link onClick={goToTop} className={` job border-b  hover:bg-gray-50 p-4 block xl:p-4 xl:pl-6 lg:flex justify-between `} to={{pathname:\"/JobDescription\", state: {job: job}}}>\r\n            <div className='flex gap-4 xl:gap-5'>\r\n                <img src={`https://remotive.io/job/${job.id}/logo`} alt={`logo ${job.company_name}`} className='rounded-full w-16 h-16' />\r\n                <div>\r\n                    <h3 className='text-blue-400'>{job.company_name}</h3>\r\n                    <h2 className='text-blue-900 font-semibold'>{job.title}</h2>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='hidden text-blue-400 text-right text-sm lg:grid '>\r\n                <p>{job.category}</p>\r\n                <div>{job.candidate_required_location}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","\r\nfunction Pages({goToTop, numOfResults, chunk, setPageNum, setfromIndex, settoIndex}) {\r\n    return (\r\n        <select className='block m-auto border rounded-md' onChange={(e)=>{\r\n            let num = e.target.value;\r\n            setPageNum(+num + +1);\r\n            setfromIndex(num * numOfResults);\r\n            settoIndex(num * numOfResults+numOfResults);\r\n            e.target.selectedIndex = 0;\r\n            goToTop();\r\n        }}>\r\n            <option>Go to page...</option>\r\n            {\r\n                chunk.map((page, index) => <option key={index} value={page}>{page+1}</option> )\r\n            }\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react'\r\n\r\nfunction PrevButton({ goToTop, numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button disabled={fromIndex === 0 ? true : false} className='font-bold bg-blue-500 px-2 pb-0.5 rounded-full text-xl text-white' onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return pageNumCurrent-1\r\n            });\r\n            setfromIndex(fromIndex-numOfResults);\r\n            settoIndex(toIndex-numOfResults);\r\n            goToTop();\r\n        }}>&#60;</button>\r\n    )\r\n}\r\n\r\nexport default PrevButton\r\n","\r\nfunction NextButton({jobs, goToTop, numOfResults, setPageNum, pageNumElement, fromIndex, setfromIndex, toIndex, settoIndex}) {\r\n    return (\r\n        <button disabled={toIndex > jobs.length-1 ? true : false} className='font-bold bg-blue-500 px-2 pb-0.5 rounded-full text-xl text-white' onClick={()=>{\r\n            setPageNum(()=>{\r\n                let pageNumCurrent = pageNumElement.innerHTML;\r\n                return +pageNumCurrent + +1\r\n                });\r\n            setfromIndex(fromIndex+numOfResults);\r\n            settoIndex(toIndex+numOfResults);\r\n            goToTop();\r\n        }}>&#62;</button>\r\n    )\r\n}\r\n\r\nexport default NextButton\r\n","import { useState } from \"react\";\r\nimport Pages from \"./pagination_components/Pages\";\r\nimport PrevButton from \"./pagination_components/PrevButton\";\r\nimport NextButton from \"./pagination_components/NextButton\";\r\n\r\nfunction Pagination({goToPage, setgoToPage, numOfResults, jobs, fromIndex, setPageNum, setfromIndex, settoIndex, toIndex, pagesCounter, chunkedPages }) {\r\n    const [fromOne, setfromOne] = useState(false);\r\n    const [fromHundred, setfromHundred] = useState(false);\r\n    const [fromTwoHundred, setfromTwoHundred] = useState(false);\r\n\r\n    const pageNumElement = document.querySelector('.pageNum');\r\n\r\n    const goToTop = () => {\r\n        window.scroll(0,0);\r\n    }\r\n\r\n    return (\r\n        <div className='grid gap-2 m-auto my-4'>\r\n\r\n            <div className='flex gap-3 justify-center mb-1.5'>\r\n                <PrevButton \r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                goToTop={goToTop}\r\n                />\r\n                {pagesCounter > 100 && !goToPage && <button onClick={()=> setgoToPage(!goToPage)} className='rounded-lg px-1  bg-blue-500 text-white'>Go to page...</button>}\r\n            { \r\n                \r\n                goToPage && pagesCounter > 100 && \r\n                <div className='flex gap-3'>\r\n                    {/* from-to buttons */}\r\n                    <button className={`${fromOne && 'bg-blue-600'}  rounded-lg px-1  bg-blue-500 text-white`} onClick={()=>{\r\n                        setfromOne(prev=>!prev);\r\n                        setfromHundred(false);\r\n                        setfromTwoHundred(false)\r\n                    }}>1...100</button>\r\n                    {pagesCounter > 100 &&\r\n                     <button className={`${fromHundred && 'bg-blue-600'}  rounded-lg px-1  bg-blue-500 text-white`} onClick={()=>{\r\n                        setfromHundred(prev=>!prev);\r\n                        setfromOne(false);\r\n                        setfromTwoHundred(false)\r\n                    }}>100...200</button>}\r\n                    {pagesCounter > 200\r\n                     &&<button className={`${fromTwoHundred && 'bg-blue-600'}  rounded-lg px-1  bg-blue-500 text-white`} onClick={()=>{\r\n                        setfromTwoHundred(prev=>!prev)\r\n                        setfromOne(false);\r\n                        setfromHundred(false)\r\n                    }}>200...</button>}\r\n\r\n                </div>\r\n                \r\n            }\r\n\r\n            {\r\n               chunkedPages.length > 0 &&  pagesCounter < 100 && \r\n                <Pages\r\n                chunk={chunkedPages[0]}\r\n                setPageNum={setPageNum} \r\n                setfromIndex={setfromIndex} \r\n                settoIndex={settoIndex}\r\n                numOfResults={numOfResults}\r\n                goToTop={goToTop}\r\n                /> \r\n            }\r\n\r\n                <NextButton\r\n                setPageNum={setPageNum}\r\n                fromIndex={fromIndex} \r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                pageNumElement={pageNumElement}\r\n                numOfResults={numOfResults}\r\n                goToTop={goToTop}\r\n                jobs={jobs}\r\n                />\r\n            </div>\r\n\r\n\r\n            {\r\n                // render pages buttons when clicked from-to button\r\n                fromOne ? chunkedPages.map((chunk, index)=> index === 0 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} goToTop={goToTop}/> ) :\r\n                fromHundred ? chunkedPages.map((chunk, index)=> index === 1 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} goToTop={goToTop}/> ) :\r\n                fromTwoHundred && chunkedPages.map((chunk, index)=> index === 2 && <Pages key={index} chunk={chunk} setPageNum={setPageNum} setfromIndex={setfromIndex} settoIndex={settoIndex} numOfResults={numOfResults} goToTop={goToTop}/>)\r\n            }\r\n\r\n            \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import {useEffect} from \"react\";\r\nimport Job from \"./jobList_components/Job\";\r\nimport chunk from 'lodash.chunk';\r\nimport Pagination from \"./jobList_components/Pagination\";\r\n\r\nfunction JobList({openFilters, goToPage, setgoToPage, pages, jobs, pagesCounter, fromIndex, setfromIndex, toIndex, settoIndex,\r\n    chunkedPages, setChunkedPages, pageNum, setPageNum, numOfResults} ) {\r\n    \r\n\r\n    useEffect(() => {\r\n        //divide pages array into 100 chunks\r\n        setChunkedPages(chunk(pages, 100));\r\n    }, [pages, setChunkedPages]);\r\n\r\n    return (\r\n        <div className='grid gap-0.5 mb-2 xl:mt-16 xl:m-auto xl:max-w-5xl'>\r\n            <div className={`${openFilters ? `xl:bg-opacity-30 bg-blue-400` : `bg-blue-500`} text-center  p-1 text-white mb-4 xl:bg-blue-300 xl:rounded-b-full xl:p-1.5`}>Found <span>{jobs.length} results</span></div>\r\n            <h2 className='font-bold text-center inline-block text-blue-900 ' >Page <span className='pageNum'>{pageNum}</span> </h2>                    \r\n            <div className='grid '>\r\n                {jobs.map((job, index) => {\r\n                    return index >= fromIndex && index < toIndex && <Job key={index} index={index} job={job}/>\r\n                })}\r\n            </div>\r\n\r\n            <h2 className='font-bold text-center inline-block text-blue-900 ' >Page <span className='pageNum'>{pageNum}</span> </h2>\r\n            \r\n            {\r\n                jobs.length > numOfResults  && \r\n                \r\n                <Pagination \r\n                fromIndex={fromIndex}\r\n                setfromIndex={setfromIndex}\r\n                toIndex={toIndex}\r\n                settoIndex={settoIndex}\r\n                chunkedPages={chunkedPages}\r\n                setChunkedPages={setChunkedPages}\r\n                pageNum={pageNum}\r\n                setPageNum={setPageNum}\r\n                jobs={jobs}\r\n                pagesCounter={pagesCounter}\r\n                numOfResults={numOfResults}\r\n                goToPage={goToPage}\r\n                setgoToPage={setgoToPage}\r\n                />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobList\r\n","import React, { useState } from 'react'\r\n\r\nfunction Filters({setOpenFilters, setgoToPage, numOfResults, setfromIndex, settoIndex, setPageNum, categories, setLimit, setCategory, setSearch, inputSearch, setInputSearch, setIsLoading}) {\r\n\r\n    const [selectedCategory, setselectedCategory] = useState('');\r\n    const [inputLimit, setInputLimit] = useState(0);\r\n    \r\n    const resetPage = () => {\r\n        setfromIndex(0);\r\n        settoIndex(numOfResults);\r\n        setPageNum(1);\r\n        setgoToPage(false);\r\n        setOpenFilters(false);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        //api state\r\n        setLimit('all');\r\n        setCategory(''); \r\n        setSearch('');\r\n        //local state\r\n        setselectedCategory('Choose a job category');\r\n        setInputSearch('');\r\n        setInputLimit('');\r\n        setOpenFilters(false);\r\n        //dom\r\n        document.querySelector('select').selectedIndex = 0;\r\n        document.querySelector('#search').value = '';\r\n        document.querySelector('#limit').value = '';\r\n    };\r\n\r\n    \r\n    return (\r\n        <form className='pb-6 grid gap-3 bg-white xl:p-5 xl:rounded-lg xl:gap-6' onSubmit={e => {\r\n                    e.preventDefault();\r\n                    setCategory(selectedCategory);\r\n                    setSearch(inputSearch);\r\n                    setLimit(inputLimit);\r\n                    setIsLoading(true);\r\n                    resetPage();\r\n                    }}>\r\n            <select className='border p-1.5' onChange={(e)=>{\r\n                setselectedCategory(e.target.value);\r\n            }}>\r\n                <option>Choose a job category</option>\r\n                <option>All jobs</option>\r\n                {categories.map( (category, index) => <option key={index} value={category.slug} >{category.name}</option>\r\n                 )}\r\n            </select>\r\n\r\n            <div className='border p-2'>\r\n                <label className='mb-2 block'  htmlFor=\"search\">Search job listing title and description</label>\r\n                 <input className='pl-2 border' type=\"search\" id=\"search\"  onChange={ e => {\r\n                    setInputSearch((e.target.value));\r\n                }} />\r\n            </div>\r\n\r\n            <div className='border p-2'>\r\n                <label className='block'  htmlFor=\"limit\">Limit the number of job listing result <span className='text-sm italic'>(will not work with search input, API problem)</span></label>\r\n                <input className='border w-20 my-1.5' type=\"number\" id=\"limit\" min=\"1\" onChange={ e => {\r\n                    setInputLimit(e.target.value);\r\n                }} />\r\n            </div>\r\n\r\n            <div className='flex justify-evenly mt-2 xl:justify-center xl:gap-14 xl:mt-0'>\r\n                <button className=' rounded-lg px-4 py-1  bg-blue-400 text-white' type=\"submit\">Go!</button>\r\n                <button className=' rounded-lg px-4 py-1  bg-blue-400 text-white' onClick={resetFilters}>Reset</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","import Filters from \"./header_components/Filters\";\r\n\r\nfunction Header({ openFilters, setOpenFilters, setgoToPage, numOfResults, setfromIndex, settoIndex, setPageNum, categories, setLimit, setCategory, setSearch, inputSearch, setInputSearch, setIsLoading }) {\r\n\r\n    return (\r\n        <header className={`${!openFilters ? `pb-3` : `xl:pb-4 xl:bg-opacity-60`} bg-blue-400 grid grid-cols-3 xl:grid-cols-7 xl:fixed w-full left-0 top-0 xl:px-7  xl:gap-3`}>\r\n            <h1 className='col-span-2 m-3 mb-2  text-white text-2xl cursor-pointer' onClick={()=> window.location.reload()}>Remote Jobs</h1>\r\n            <button className={`${openFilters ? `bg-opacity-0 mr-6 xl:self-start xl:mt-2` : `mt-3` } mr-3  rounded-2xl px-2 py-1 col-start-3 justify-self-end self-center bg-blue-500 text-white  xl:col-start-7 xl:px-3`} onClick={()=> {\r\n                setOpenFilters(openFilters => !openFilters);\r\n                }}> {openFilters ? <span className='text-xl xl:text-2xl'>x</span> : <span >Filters</span> }  \r\n            </button>\r\n            \r\n            <div className={`${openFilters ? `col-span-full xl:col-start-3 xl:col-end-6 xl:row-span-full` : `hidden`} xl:mt-5 xl:mb-1 `}>\r\n                <Filters \r\n                setLimit={setLimit} \r\n                setCategory={setCategory} \r\n                setSearch={setSearch}\r\n                inputSearch={inputSearch}\r\n                setIsLoading={setIsLoading}\r\n                setInputSearch={setInputSearch}\r\n                categories={categories}\r\n                setfromIndex={setfromIndex}\r\n                settoIndex={settoIndex}\r\n                setPageNum={setPageNum}\r\n                numOfResults={numOfResults}\r\n                setgoToPage={setgoToPage}\r\n                setOpenFilters={setOpenFilters}\r\n                />\r\n            </div>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","function Footer({isLoading, jobs}) {\r\n    \r\n    return (\r\n        <footer className={`${isLoading && `fixed bottom-0 w-full`} ${jobs.length === 0 && `fixed bottom-0 w-full`} text-white mt-4 text-center`}>\r\n            <p className='py-2 bg-blue-400  xl:bg-blue-300 xl:rounded-t-full xl:p-1.5'>API Source: <a href=\"https://remotive.io/api-documentation\" rel=\"noreferrer\" target=\"_blank\">https://remotive.io/api-documentation</a></p>\r\n            <p className='bg-blue-500 py-2'>Made by <a className='underline' href=\"https://github.com/BogdanCikota\" rel=\"noreferrer\" target=\"_blank\">Bogdan</a> </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction JobDescription() {\r\n    const location = useLocation();\r\n    const {job} = location.state;\r\n    const str = job.publication_date;\r\n    let date = new Date(str + \"Z\");\r\n\r\n    let jobDate = date.toUTCString();\r\n    jobDate = jobDate.slice(5,16);\r\n    \r\n    return (\r\n       <div className='xl:mt-16 xl:m-auto xl:max-w-5xl xl:p-4'>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold lg:text-lg\"> &#8592; back</Link>\r\n        \r\n        <div className='xl:flex gap-2'>\r\n            <div className='w-20 h-20 m-auto xl:border xl:p-3 xl:m-0 xl:w-auto xl:h-auto self-center'>\r\n                <img src={`https://remotive.io/job/${job.id}/logo`} alt={`logo ${job.company_name}`} className='rounded-full' />\r\n            </div>\r\n           \r\n            <div className='text-blue-900 font-semibold p-2 xl:grid gap-2'>\r\n                <h3><span className='font-bold' >{job.company_name}</span> </h3>\r\n                <h2>Job title: {job.title}</h2>\r\n                <p>Category:  <span className='font-normal'>{job.category}</span> </p>\r\n                <div>\r\n                    <div className='inline'>{job.candidate_required_location === '' ? <span>/</span> : <span className='font-normal'>{job.candidate_required_location}</span> } </div> /\r\n                    <div className='inline'> {job.job_type ? <span className='font-normal'>{job.job_type}</span> : <span>/</span> } </div>\r\n                </div>\r\n                <div>Published: <span className='font-normal'>{jobDate}</span> </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='bg-gray-50 job-description p-2 text-blue-900 grid gap-2' dangerouslySetInnerHTML={{ __html: job.description }}></div>\r\n        <Link to='/' className=\"underline text-blue-900 font-semibold lg:text-lg\"> &#8592; back</Link>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default JobDescription","\r\nfunction Loading({hasData}) {\r\n    return (\r\n        <div className='grid gap-2 xl:mt-16 xl:m-auto xl:max-w-5xl'>\r\n            <h2 className='text-center bg-blue-500 p-1 text-white xl:bg-blue-300 xl:rounded-b-full xl:p-1.5'>\r\n                {hasData ? <span>Loading...</span> : <span>No data! Try again later!</span>}\r\n            </h2>\r\n            <div className='rounded-full bg-gray-100 h-8' > </div>\r\n            <div>\r\n                <div className='bg-gray-50 p-3 h-32'></div>\r\n                <div className='bg-gray-100 p-3 h-32'></div>\r\n                <div className='bg-gray-50 p-3 h-32'></div>\r\n                <div className='hidden bg-gray-100 p-3 h-32 xl:block'></div>\r\n                <div className='hidden bg-gray-50 p-3 h-32 xl:block'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","\r\nfunction ZeroResults() {\r\n    return (\r\n        <div className='grid gap-2 xl:mt-16 xl:m-auto xl:max-w-5xl'>\r\n            <h2 className='text-center bg-blue-500 p-1 text-white xl:bg-blue-300 xl:rounded-b-full xl:p-1.5'>0 results</h2>\r\n            <div className='rounded-full bg-gray-100 h-8' > </div>\r\n            <div>\r\n                <div className='bg-gray-50 p-3 h-32'></div>\r\n                <div className='bg-gray-100 p-3 h-32'></div>\r\n                <div className='bg-gray-50 p-3 h-32'></div>\r\n                <div className='hidden bg-gray-100 p-3 h-32 xl:block'></div>\r\n                <div className='hidden bg-gray-50 p-3 h-32 xl:block'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ZeroResults\r\n","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport JobList from \"./components/JobList\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport JobDescription from \"./components/JobDescription\";\r\nimport Loading from \"./components/Loading\";\r\nimport ZeroResults from \"./components/ZeroResults\";\r\n\r\n\r\nfunction App() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pagesCounter, setpagesCounter] = useState(0);\r\n    const [pages, setPages] = useState([]);\r\n    const [limit, setLimit] = useState('all');\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [inputSearch, setInputSearch] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [openFilters, setOpenFilters] = useState(false);\r\n    const [fromIndex, setfromIndex] =useState(0);\r\n    const numOfResults = 7;\r\n    const [toIndex, settoIndex]  = useState(numOfResults);\r\n    const [chunkedPages, setChunkedPages] = useState([]);\r\n    const [pageNum, setPageNum] = useState(1);\r\n    const [goToPage, setgoToPage] = useState(false);\r\n    const [hasData, setHasData] = useState(true);\r\n    \r\n\r\n    const getCategories = async() => {\r\n        try {\r\n            const response = await axios.get('https://remotive.io/api/remote-jobs/categories');\r\n            console.log(response.data.jobs);\r\n            setCategories(response.data.jobs);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            setHasData(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n         const getJobs = async() => {\r\n            try {\r\n                const response = await axios.get(`https://remotive.io/api/remote-jobs?limit=${limit}&category=${category}&search=${search}`);\r\n                console.log(response.data.jobs);\r\n                setJobs(response.data.jobs);\r\n                setIsLoading(false);\r\n\r\n                let pagesArr = []\r\n\r\n                for (let i = 0; i < response.data.jobs.length / numOfResults; i++) {\r\n                    pagesArr.push(i);\r\n                }\r\n\r\n                setpagesCounter(pagesArr.length);\r\n\r\n                setPages(pagesArr);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getJobs();\r\n        getCategories();\r\n    }, [limit, category, search]);\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <HashRouter basemname='/'>\r\n            <div className=\"md:mx-40 xl:mx-0\">\r\n                <Header \r\n                openFilters={openFilters} \r\n                setOpenFilters={setOpenFilters}\r\n                setLimit={setLimit} \r\n                setCategory={setCategory} \r\n                setSearch={setSearch}\r\n                inputSearch={inputSearch}\r\n                setIsLoading={setIsLoading}\r\n                setInputSearch={setInputSearch}\r\n                categories={categories}\r\n                setfromIndex={setfromIndex}\r\n                settoIndex={settoIndex}\r\n                setPageNum={setPageNum}\r\n                numOfResults={numOfResults}\r\n                setgoToPage={setgoToPage}\r\n                />\r\n                \r\n                \r\n                \r\n                {isLoading ? <Loading hasData={hasData} />:\r\n                    \r\n                    jobs.length === 0 ? <ZeroResults/> :\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <JobList \r\n                                jobs={jobs} \r\n                                pages={pages} \r\n                                pagesCounter={pagesCounter} \r\n                                fromIndex={fromIndex} \r\n                                setfromIndex={setfromIndex}\r\n                                toIndex={toIndex} \r\n                                settoIndex={settoIndex}\r\n                                chunkedPages={chunkedPages} \r\n                                setChunkedPages={setChunkedPages}\r\n                                pageNum={pageNum} \r\n                                setPageNum={setPageNum}\r\n                                numOfResults={numOfResults}\r\n                                goToPage={goToPage}\r\n                                setgoToPage={setgoToPage}\r\n                                openFilters={openFilters}\r\n                                /> \r\n                            </Route>\r\n\r\n                            <Route exact path=\"/JobDescription\" component={JobDescription} />\r\n                        </Switch>\r\n                    \r\n                    }\r\n\r\n                    \r\n                    <Footer isLoading={isLoading} jobs={jobs} />\r\n            </div>\r\n        </HashRouter>\r\n   \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}